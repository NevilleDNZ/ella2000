DECS  checksim  CONTEXT VOID  USE  putstrings,  messageproc,  assmodes,
      transformprocs:

configinfo A68CONFIG "$Id: checksim.a68,v 34.2 1995/03/29 13:03:11 ella Exp $";


COMMENT 
    ************************************************************************
    This Program is the property of the Secretary of State for Defence
    (United Kingdom) acting through the Defence Research Agency (DRA). Use,
    reproduction, production of amended versions and/or transfer of this
    Program is permitted provided that:

  (a)  this legend be preserved on any such reproduction and amended version,
  (b)  any amended version of this Program be clearly marked to show the
       nature of the amendment and of the name of the amending organisation,
  and
  (c)  any recipient  of such reproduction or amended version accept the
       conditions set out in this legend.

                         Crown Copyright, (c)   1993

                             All rights reserved.

    The Secretary of State for Defence (United Kingdom) acting through his
    Defence Research Agency (DRA) gives no warranty that any element of the
    Software is suitable for any purpose and he shall not be liable for any
    loss or damage including loss or damage resulting in injury or death
    howsoever caused which results from the use of the Software, or any
    developments adaptions modifications translations and enhancements
    thereof.

    The original authors may be contacted via email on ella@dra.hmg.gb or by
    writing to ELLA Office, DRA, St Andrews Road, Malvern, Worcs WR14 3PS, UK.
    ************************************************************************

27:10:93  Created to check closure from asscommands to ensure that it is
             safe to call the simulator.  DCT
14:06:94  33.001  ELLA  NewConFig Entered in new config system previous version
                                  number  31.009 
30:08:94  33.001  DJS   SepTrans  Move from transform to ella, was in the wrong
                                  place!!!. 
29:03:95  34.002  ELLA  Modcprght Change copyright header
??:??:??   ?.???  ????
COMMENT


PROC  check_sim_closure = (CLOSURE  closure,  MESSAGEPROC  msg) BOOL:
BEGIN
   BOOL  fmacro:= TRUE,  fimport:= TRUE,  fsequence:= TRUE,  ftime:= TRUE,
         ffntype:= TRUE,  fmake:= TRUE,  fjoin:= TRUE,  fportname:= TRUE,
         err:= FALSE;

   PROC  report = (REF BOOL  flag,  STR  name) VOID:
      IF flag
      THEN  err:= TRUE;  flag:= FALSE;
            msg(error, concat(( "You need to call the """, name,
                                """ transform")))
      FI;

   PROC  formula = (FORMULA  f,  TRANSFORMPROCS  tprocs) FORMULAC:
      CASE f IN
         (REF FINT)  (f, FALSE),
         (REF FBRACKET  b)  formula(formula OF b, tprocs)
      OUT  report(fmacro, "macro");
           (formula OF nulltprocs)(f, tprocs)
      ESAC;

   PROC  unit = (UNIT  u,  TRANSFORMPROCS  tprocs) UNITC:
   BEGIN
      CASE u IN
         (REF UNAME  n)  IF sort OF n = uiosource  OREL
                            sort OF n = uiosink
                         THEN  report(ffntype, "fntype")
                         FI,
         (REF UPORTNAME)  report(fportname, "portname"),
         (REF USEQUENCE)  report(fsequence, "sequence"),
         (UNION (REF UCHECK, REF UCOND, REF UREPL))
                          report(fmacro, "macro")

      OUT  SKIP
      ESAC;
      (unit OF nulltprocs)(u, tprocs)
   END;

   PROC  fnbody = (FNBODY  body,  TRANSFORMPROCS  tprocs) FNBODYC:
   BEGIN
      CASE body IN
         (REF IMPORT)     report(fimport, "import"),
         (REF TIMESCALE)  report(ftime, "timescale")
      OUT  SKIP
      ESAC;
      CASE body IN
         (UNION (REF ARITH, REF ALIENCODE))  (body, FALSE)
      OUT  (fnbody OF nulltprocs)(body, tprocs)
      ESAC
   END;


   TRANSFORMPROCS  newtprocs = make_newtprocs( nulltprocs,
                                               (formula, unit, fnbody) );

   (closure OF newtprocs)(closure, newtprocs, msg);

   IF err
   THEN  msg( user, "Closure can not be simulated by the "
                    "standard ELLA simulator" );
         FALSE
   ELSE  TRUE
   FI
END


KEEP  check_sim_closure
FINISH
